{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/emily/Documents/spring22/capstone/22A482-TripPlanner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"/home/emily/Documents/spring22/capstone/22A482-TripPlanner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/emily/Documents/spring22/capstone/22A482-TripPlanner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/emily/Documents/spring22/capstone/22A482-TripPlanner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _templateObject,\n    _jsxFileName = \"/home/emily/Documents/spring22/capstone/22A482-TripPlanner/src/settings subpages/profile settings/EditEmail.js\",\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _templateObject6,\n    _templateObject7,\n    _templateObject8,\n    _templateObject9,\n    _templateObject10,\n    _templateObject11;\n\nimport React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport Nav from \"../../Components/Nav\";\nimport Footer from \"../../Components/Footer\";\nimport { useNavigate } from \"react-router\";\nimport { signInWithGoogle } from \"../../Firebase/firebase\";\nimport Google from '../../Images/Icons/Google.png';\nimport { store } from '../../store/TripUsStore';\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\n\nfunction EditEmail(props) {\n  var _this = this;\n\n  var history = useNavigate();\n\n  function handleRoute(route) {\n    history(route);\n  }\n\n  var email = useRef(null);\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      emailInput = _React$useState2[0],\n      setEmailInput = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      clicked = _React$useState4[0],\n      setClicked = _React$useState4[1];\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      googleEmail = _React$useState6[0],\n      setGoogleEmail = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      googleClicked = _React$useState8[0],\n      setGoogleClicked = _React$useState8[1];\n\n  var handleGoogleClick = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return signInWithGoogle();\n\n            case 2:\n              googleEmail = _context.sent;\n              console.log(googleEmail);\n\n              if (googleEmail === null) {\n                setGoogleEmail(null);\n              } else {\n                setGoogleEmail(googleEmail);\n              }\n\n              setEmailInput(null);\n              setGoogleClicked(true);\n              setClicked(false);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleGoogleClick(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleClick = function handleClick(e) {\n    setClicked(true);\n    setGoogleEmail(null);\n    setGoogleClicked(false);\n\n    if (email.current.value === \"\") {\n      setEmailInput(null);\n    } else {\n      setEmailInput(email.current.value.trim().toLowerCase());\n    }\n  };\n\n  var VALIDATE_ACC = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"query validateAcc ($Email: String!){\\n        User(where: {Email: {_eq: $Email}}) {\\n            User_ID\\n            First_Name\\n            Last_Name\\n        }\\n    }\"])));\n\n  function validateEmail(email) {\n    var regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regexp.test(email);\n  }\n\n  var CheckBlank = function CheckBlank() {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 16\n      }\n    }, \"Fields cannot be blank!\");\n  };\n\n  var CheckGoogleUser = function CheckGoogleUser() {\n    var _useQuery = useQuery(VALIDATE_ACC, {\n      variables: {\n        Email: googleEmail\n      }\n    }),\n        data = _useQuery.data,\n        error = _useQuery.error,\n        loading = _useQuery.loading;\n\n    if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 20\n      }\n    }, \"Loading...\");\n    console.log(data);\n\n    if (!validateEmail(googleEmail)) {\n      return /*#__PURE__*/React.createElement(\"e\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 20\n        }\n      }, \" Please enter a valid email! \");\n    } else if (data.User[0]) {\n      return /*#__PURE__*/React.createElement(\"e\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 20\n        }\n      }, \" That email is already registered! \");\n    }\n\n    return /*#__PURE__*/React.createElement(UpdateEmailGoogle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 16\n      }\n    });\n  };\n\n  var UpdateEmailGoogle = function UpdateEmailGoogle() {\n    var _useMutation = useMutation(UPDATE_EMAIL),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        update_email = _useMutation2[0],\n        _useMutation2$ = _useMutation2[1],\n        data = _useMutation2$.data,\n        loading = _useMutation2$.loading,\n        error = _useMutation2$.error;\n\n    useEffect(function () {\n      update_email({\n        variables: {\n          ID: sessionStorage.getItem(\"userId\"),\n          Email: googleEmail\n        }\n      });\n    }, []);\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 20\n        }\n      }, \"Updating your email...\");\n    }\n\n    if (data) {\n      var userProfile = JSON.parse(sessionStorage.getItem('userProfile'));\n      userProfile.Email = googleEmail;\n      sessionStorage.setItem('userProfile', JSON.stringify(userProfile));\n      window.location.reload(false);\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 20\n        }\n      }, \"Email updated!\");\n    }\n\n    return null;\n  };\n\n  var UPDATE_EMAIL = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"mutation update_user ($ID: Int!, $Email: String!) {\\n        update_User_by_pk(\\n            pk_columns: {User_ID: $ID}\\n            _set: {Email: $Email\\n            }\\n        )\\n        {\\n            Email\\n        }\\n    }\"])));\n\n  var UpdateEmail = function UpdateEmail() {\n    var _useMutation3 = useMutation(UPDATE_EMAIL),\n        _useMutation4 = _slicedToArray(_useMutation3, 2),\n        update_email = _useMutation4[0],\n        _useMutation4$ = _useMutation4[1],\n        data = _useMutation4$.data,\n        loading = _useMutation4$.loading,\n        error = _useMutation4$.error;\n\n    useEffect(function () {\n      update_email({\n        variables: {\n          ID: sessionStorage.getItem(\"userId\"),\n          Email: emailInput\n        }\n      });\n    }, []);\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 20\n        }\n      }, \"Updating your email...\");\n    }\n\n    if (data) {\n      var userProfile = JSON.parse(sessionStorage.getItem('userProfile'));\n      userProfile.Email = emailInput;\n      sessionStorage.setItem('userProfile', JSON.stringify(userProfile));\n      window.location.reload(false);\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 20\n        }\n      }, \"Email updated!\");\n    }\n\n    return null;\n  };\n\n  var SendData = function SendData() {\n    var _useQuery2 = useQuery(VALIDATE_ACC, {\n      variables: {\n        Email: emailInput\n      }\n    }),\n        data = _useQuery2.data,\n        error = _useQuery2.error,\n        loading = _useQuery2.loading;\n\n    if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 20\n      }\n    }, \"Loading...\");\n\n    if (!validateEmail(emailInput)) {\n      return /*#__PURE__*/React.createElement(\"e\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 20\n        }\n      }, \" Please enter a valid email! \");\n    } else if (data.User[0]) {\n      return /*#__PURE__*/React.createElement(\"e\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 20\n        }\n      }, \" That email is already registered! \");\n    }\n\n    return /*#__PURE__*/React.createElement(UpdateEmail, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 16\n      }\n    });\n  };\n\n  var handleKeypress = function handleKeypress(e) {\n    //it triggers by pressing the enter key\n    e.preventDefault();\n    console.log(e);\n\n    if (e.type === \"submit\") {\n      handleClick();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    theme: props.theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SignUpForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, \"Edit Email\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleKeypress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    theme: props.theme.theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: email,\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Enter New Email:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 106\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(SubmitButton, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  }, \"Change Email\"), emailInput !== null ? /*#__PURE__*/React.createElement(SendData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 52\n    }\n  }) : clicked && /*#__PURE__*/React.createElement(CheckBlank, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 77\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, \"or\"), /*#__PURE__*/React.createElement(GoogleButton, {\n    onClick: handleGoogleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Google,\n    alt: \"Google\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, \"Use a New Google Account\")), googleEmail !== null && googleClicked && /*#__PURE__*/React.createElement(CheckGoogleUser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 64\n    }\n  }))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }), \"console.log(email.current.value)\");\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps)(EditEmail);\nvar Container = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n\"])));\nvar Content = styled.div(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n    display: flex;\\n    padding: 0 10%;\\n    height: 100vh;\\n    justify-content: center;\\n    align-items: center;\\n\"])));\nvar SignUpForm = styled.div(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n    margin: 0 auto;\\n    border: 2px solid \", \";\\n    border-radius: 4px;\\n    padding: 25px 100px 50px;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    \\n    p {\\n        margin: 0;\\n    }\\n\"])), function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.toggleBorder;\n});\nvar Title = styled.p(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n    font-size: 36px;\\n    margin: 0 0 50px 0;\\n    font-weight: 700;\\n\"])));\nvar Form = styled.form(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n    width: 100%;\\n    margin-top: 20px;\\n\"])));\nvar Row = styled.div(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n\\n    input {\\n        border: none;\\n        outline: none;\\n        padding: 5px;\\n        font-size: 18px;\\n        border-bottom: solid 1px \", \";\\n        background-color: \", \";\\n        color: \", \";\\n\\n        &::placeholder {\\n            color: \", \";\\n            opacity: .6;\\n        }\\n    } \\n\\n    p {\\n        text-align: center;\\n        color: green;\\n    }\\n    e {\\n        text-align: center;\\n        color: red;\\n    }\\n\"])), function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.text;\n}, function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.body;\n}, function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.text;\n}, function (_ref6) {\n  var theme = _ref6.theme;\n  return theme.text;\n});\nvar GoogleButton = styled.div(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\n    width: max-content;\\n    border: 2px solid #4285f4;\\n    padding: 5px 30px;\\n    border-radius: 45px;\\n    display: flex;\\n    align-items: center;\\n    cursor: pointer;\\n    transition: 300ms;\\n    background-color: #4285f4;\\n    margin: 20px 0;\\n\\n    p {\\n        margin-left: 20px;\\n        font-size: 16px;\\n        color: white;\\n        font-weight: 700;\\n    }\\n    \\n    img {\\n        width: 25spx;\\n        height: 25px;\\n        border-radius: 50%;\\n        background-color: white;\\n    }\\n\\n    :hover {\\n        opacity: .8;\\n        transition: 300ms;\\n    }\\n\"])));\nvar SubmitButton = styled(GoogleButton)(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\\n    width: 100%;\\n    background-color: #308446;\\n    border: 2px solid #308446;\\n    display: flex;\\n    justify-content: center;\\n    font-weight: 700;\\n    color: white;\\n\"])));\nvar Login = styled.p(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\\n    text-decoration: underline;\\n    cursor: pointer;\\n\"])));","map":{"version":3,"sources":["/home/emily/Documents/spring22/capstone/22A482-TripPlanner/src/settings subpages/profile settings/EditEmail.js"],"names":["React","useEffect","useRef","styled","connect","Nav","Footer","useNavigate","signInWithGoogle","Google","store","gql","useMutation","useQuery","EditEmail","props","history","handleRoute","route","email","useState","emailInput","setEmailInput","clicked","setClicked","googleEmail","setGoogleEmail","googleClicked","setGoogleClicked","handleGoogleClick","e","console","log","handleClick","current","value","trim","toLowerCase","VALIDATE_ACC","validateEmail","regexp","test","CheckBlank","CheckGoogleUser","variables","Email","data","error","loading","User","UpdateEmailGoogle","UPDATE_EMAIL","update_email","ID","sessionStorage","getItem","userProfile","JSON","parse","setItem","stringify","window","location","reload","UpdateEmail","SendData","handleKeypress","preventDefault","type","theme","mapStateToProps","state","Container","div","Content","SignUpForm","toggleBorder","Title","p","Form","form","Row","text","body","GoogleButton","SubmitButton","Login"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,SAAQC,GAAR,EAAaC,WAAb,EAA0BC,QAA1B,QAAyC,gBAAzC;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,MAAMC,OAAO,GAAGT,WAAW,EAA3B;;AACA,WAASU,WAAT,CAAqBC,KAArB,EAA4B;AACxBF,IAAAA,OAAO,CAACE,KAAD,CAAP;AACH;;AAED,MAAIC,KAAK,GAAGjB,MAAM,CAAC,IAAD,CAAlB;;AANsB,wBAQcF,KAAK,CAACoB,QAAN,CAAe,IAAf,CARd;AAAA;AAAA,MAQfC,UARe;AAAA,MAQHC,aARG;;AAAA,yBASQtB,KAAK,CAACoB,QAAN,CAAe,KAAf,CATR;AAAA;AAAA,MASfG,OATe;AAAA,MASNC,UATM;;AAAA,yBAUcxB,KAAK,CAACoB,QAAN,CAAe,IAAf,CAVd;AAAA;AAAA,MAUjBK,WAViB;AAAA,MAUJC,cAVI;;AAAA,yBAWoB1B,KAAK,CAACoB,QAAN,CAAe,KAAf,CAXpB;AAAA;AAAA,MAWfO,aAXe;AAAA,MAWAC,gBAXA;;AAatB,MAAMC,iBAAiB;AAAA,wEAAG,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACFtB,gBAAgB,EADd;;AAAA;AACtBiB,cAAAA,WADsB;AAEtBM,cAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;;AACA,kBAAIA,WAAW,KAAK,IAApB,EAA0B;AACtBC,gBAAAA,cAAc,CAAC,IAAD,CAAd;AACH,eAFD,MAEO;AACHA,gBAAAA,cAAc,CAACD,WAAD,CAAd;AACH;;AACDH,cAAAA,aAAa,CAAC,IAAD,CAAb;AACAM,cAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAJ,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAVsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAjBK,iBAAiB;AAAA;AAAA;AAAA,KAAvB;;AAeA,MAAMI,WAAW,GAAG,SAAdA,WAAc,CAACH,CAAD,EAAO;AACvBN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;;AACA,QAAIT,KAAK,CAACe,OAAN,CAAcC,KAAd,KAAwB,EAA5B,EAAgC;AAC5Bb,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH,KAFD,MAEO;AACHA,MAAAA,aAAa,CAACH,KAAK,CAACe,OAAN,CAAcC,KAAd,CAAoBC,IAApB,GAA2BC,WAA3B,EAAD,CAAb;AACH;AAIJ,GAZD;;AAcA,MAAMC,YAAY,GAAG3B,GAAH,8OAAlB;;AASA,WAAS4B,aAAT,CAAwBpB,KAAxB,EAA+B;AAC3B,QAAMqB,MAAM,GAAG,sJAAf;AACA,WAAOA,MAAM,CAACC,IAAP,CAAYtB,KAAZ,CAAP;AACH;;AAED,MAAMuB,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACH,GAFD;;AAIA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA,oBACK9B,QAAQ,CAACyB,YAAD,EAAe;AAClDM,MAAAA,SAAS,EAAG;AAACC,QAAAA,KAAK,EAAGpB;AAAT;AADsC,KAAf,CADb;AAAA,QACnBqB,IADmB,aACnBA,IADmB;AAAA,QACbC,KADa,aACbA,KADa;AAAA,QACNC,OADM,aACNA,OADM;;AAK1B,QAAIA,OAAJ,EACI,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACJjB,IAAAA,OAAO,CAACC,GAAR,CAAYc,IAAZ;;AACA,QAAI,CAACP,aAAa,CAACd,WAAD,CAAlB,EAAiC;AAC7B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAP;AACH,KAFD,MAEO,IAAIqB,IAAI,CAACG,IAAL,CAAU,CAAV,CAAJ,EAAiB;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAP;AACH;;AAED,wBAAO,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAfD;;AAiBA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAAA,uBACiBtC,WAAW,CAACuC,YAAD,CAD5B;AAAA;AAAA,QACrBC,YADqB;AAAA;AAAA,QACNN,IADM,kBACNA,IADM;AAAA,QACDE,OADC,kBACDA,OADC;AAAA,QACOD,KADP,kBACOA,KADP;;AAG5B9C,IAAAA,SAAS,CAAC,YAAM;AACZmD,MAAAA,YAAY,CAAC;AACTR,QAAAA,SAAS,EAAG;AACRS,UAAAA,EAAE,EAAEC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CADI;AAERV,UAAAA,KAAK,EAAEpB;AAFC;AADH,OAAD,CAAZ;AAMH,KAPQ,EAON,EAPM,CAAT;;AASA,QAAIuB,OAAJ,EAAa;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAP;AACH;;AAED,QAAIF,IAAJ,EAAU;AACN,UAAIU,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAAX,CAAlB;AACAC,MAAAA,WAAW,CAACX,KAAZ,GAAoBpB,WAApB;AACA6B,MAAAA,cAAc,CAACK,OAAf,CAAuB,aAAvB,EAAsCF,IAAI,CAACG,SAAL,CAAeJ,WAAf,CAAtC;AACAK,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACA,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACH;;AACD,WAAO,IAAP;AAEH,GAzBD;;AA2BA,MAAMZ,YAAY,GAAGxC,GAAH,0SAAlB;;AAWA,MAAMqD,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,wBACuBpD,WAAW,CAACuC,YAAD,CADlC;AAAA;AAAA,QACfC,YADe;AAAA;AAAA,QACAN,IADA,kBACAA,IADA;AAAA,QACKE,OADL,kBACKA,OADL;AAAA,QACaD,KADb,kBACaA,KADb;;AAGtB9C,IAAAA,SAAS,CAAC,YAAM;AACZmD,MAAAA,YAAY,CAAC;AACTR,QAAAA,SAAS,EAAG;AACRS,UAAAA,EAAE,EAAEC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CADI;AAERV,UAAAA,KAAK,EAAExB;AAFC;AADH,OAAD,CAAZ;AAMH,KAPQ,EAON,EAPM,CAAT;;AASA,QAAI2B,OAAJ,EAAa;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAP;AACH;;AAED,QAAIF,IAAJ,EAAU;AACN,UAAIU,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAAX,CAAlB;AACAC,MAAAA,WAAW,CAACX,KAAZ,GAAoBxB,UAApB;AACAiC,MAAAA,cAAc,CAACK,OAAf,CAAuB,aAAvB,EAAsCF,IAAI,CAACG,SAAL,CAAeJ,WAAf,CAAtC;AACAK,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACA,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACH;;AACD,WAAO,IAAP;AAEH,GAzBD;;AA2BA,MAAME,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,qBACYpD,QAAQ,CAACyB,YAAD,EAAe;AAClDM,MAAAA,SAAS,EAAG;AAACC,QAAAA,KAAK,EAAGxB;AAAT;AADsC,KAAf,CADpB;AAAA,QACZyB,IADY,cACZA,IADY;AAAA,QACNC,KADM,cACNA,KADM;AAAA,QACCC,OADD,cACCA,OADD;;AAKnB,QAAIA,OAAJ,EACI,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;;AAEJ,QAAI,CAACT,aAAa,CAAClB,UAAD,CAAlB,EAAgC;AAC5B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAP;AACH,KAFD,MAEO,IAAIyB,IAAI,CAACG,IAAL,CAAU,CAAV,CAAJ,EAAiB;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAP;AACH;;AAED,wBAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEH,GAhBD;;AAkBA,MAAMiB,cAAc,GAAG,SAAjBA,cAAiB,CAAApC,CAAC,EAAI;AACxB;AACAA,IAAAA,CAAC,CAACqC,cAAF;AACApC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;;AACA,QAAIA,CAAC,CAACsC,IAAF,KAAW,QAAf,EAAyB;AACrBnC,MAAAA,WAAW;AACd;AACJ,GAPD;;AASA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAElB,KAAK,CAACsD,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEH,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAEnD,KAAK,CAACsD,KAAN,CAAYA,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAO,IAAA,GAAG,EAAElD,KAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,IAAI,EAAC,OAArC;AAA6C,IAAA,WAAW,EAAC,kBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAEiF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFjF,CADJ,eAKI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEc,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKZ,UAAU,KAAK,IAAf,gBAAsB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,GAAoCE,OAAO,iBAAI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFpD,CALJ,CAFJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAbJ,eAcI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEM,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEpB,MAAV;AAAkB,IAAA,GAAG,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFJ,CAdJ,EAkBKgB,WAAW,KAAK,IAAhB,IAAwBE,aAAxB,iBAA0C,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlB/C,CADJ,CAFJ,eAwBI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,qCADJ;AA8BH;;AAED,IAAM2C,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAOA,KAAP;AACH,CAFD;;AAIA,eAAenE,OAAO,CAACkE,eAAD,CAAP,CAAyBxD,SAAzB,CAAf;AAEA,IAAM0D,SAAS,GAAGrE,MAAM,CAACsE,GAAV,yEAAf;AAGA,IAAMC,OAAO,GAAGvE,MAAM,CAACsE,GAAV,8LAAb;AAQA,IAAME,UAAU,GAAGxE,MAAM,CAACsE,GAAV,ySAEQ;AAAA,MAAGJ,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACO,YAArB;AAAA,CAFR,CAAhB;AAcA,IAAMC,KAAK,GAAG1E,MAAM,CAAC2E,CAAV,+IAAX;AAMA,IAAMC,IAAI,GAAG5E,MAAM,CAAC6E,IAAV,kHAAV;AAKA,IAAMC,GAAG,GAAG9E,MAAM,CAACsE,GAAV,ojBAS0B;AAAA,MAAGJ,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACa,IAArB;AAAA,CAT1B,EAUmB;AAAA,MAAGb,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACc,IAArB;AAAA,CAVnB,EAWQ;AAAA,MAAGd,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACa,IAArB;AAAA,CAXR,EAcY;AAAA,MAAGb,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACa,IAArB;AAAA,CAdZ,CAAT;AA6BA,IAAME,YAAY,GAAGjF,MAAM,CAACsE,GAAV,6oBAAlB;AAgCA,IAAMY,YAAY,GAAGlF,MAAM,CAACiF,YAAD,CAAT,yPAAlB;AAUA,IAAME,KAAK,GAAGnF,MAAM,CAAC2E,CAAV,kIAAX","sourcesContent":["import React, {useEffect, useRef} from \"react\";\nimport styled from \"styled-components\";\nimport {connect} from \"react-redux\";\nimport Nav from \"../../Components/Nav\";\nimport Footer from \"../../Components/Footer\";\nimport { useNavigate } from \"react-router\";\nimport { signInWithGoogle } from \"../../Firebase/firebase\";\nimport Google from '../../Images/Icons/Google.png';\nimport { store } from '../../store/TripUsStore';\nimport {gql, useMutation, useQuery} from \"@apollo/client\";\n\nfunction EditEmail(props) {\n    const history = useNavigate();\n    function handleRoute(route) {\n        history(route);\n    }\n\n    let email = useRef(null);\n\n    const [emailInput, setEmailInput] = React.useState(null);\n    const [clicked, setClicked] = React.useState(false)\n    let [googleEmail, setGoogleEmail] = React.useState(null)\n    const [googleClicked, setGoogleClicked] = React.useState(false)\n\n    const handleGoogleClick = async (e) => {\n        googleEmail = await signInWithGoogle()\n        console.log(googleEmail)\n        if (googleEmail === null) {\n            setGoogleEmail(null)\n        } else {\n            setGoogleEmail(googleEmail);\n        }\n        setEmailInput(null)\n        setGoogleClicked(true)\n        setClicked(false)\n\n    }\n\n\n    const handleClick = (e) => {\n        setClicked(true)\n        setGoogleEmail(null)\n        setGoogleClicked(false)\n        if (email.current.value === \"\") {\n            setEmailInput(null)\n        } else {\n            setEmailInput(email.current.value.trim().toLowerCase());\n        }\n\n\n\n    };\n\n    const VALIDATE_ACC = gql`query validateAcc ($Email: String!){\n        User(where: {Email: {_eq: $Email}}) {\n            User_ID\n            First_Name\n            Last_Name\n        }\n    }`\n\n\n    function validateEmail (email) {\n        const regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return regexp.test(email);\n    }\n\n    const CheckBlank = () => {\n        return <p>Fields cannot be blank!</p>\n    }\n\n    const CheckGoogleUser = () => {\n        const {data, error, loading} = useQuery(VALIDATE_ACC, {\n            variables : {Email : googleEmail}\n        });\n\n        if (loading)\n            return <p>Loading...</p>\n        console.log(data)\n        if (!validateEmail(googleEmail)) {\n            return <e> Please enter a valid email! </e>\n        } else if (data.User[0]){\n            return <e> That email is already registered! </e>\n        }\n\n        return <UpdateEmailGoogle/>\n    }\n\n    const UpdateEmailGoogle = () => {\n        const [update_email, {data,loading,error}] = useMutation(UPDATE_EMAIL);\n\n        useEffect(() => {\n            update_email({\n                variables : {\n                    ID: sessionStorage.getItem(\"userId\"),\n                    Email: googleEmail\n                }\n            });\n        }, []);\n\n        if (loading) {\n            return <p>Updating your email...</p>\n        }\n\n        if (data) {\n            let userProfile = JSON.parse(sessionStorage.getItem('userProfile'));\n            userProfile.Email = googleEmail\n            sessionStorage.setItem('userProfile', JSON.stringify(userProfile));\n            window.location.reload(false);\n            return <p>Email updated!</p>\n        }\n        return null\n\n    }\n\n    const UPDATE_EMAIL = gql `mutation update_user ($ID: Int!, $Email: String!) {\n        update_User_by_pk(\n            pk_columns: {User_ID: $ID}\n            _set: {Email: $Email\n            }\n        )\n        {\n            Email\n        }\n    }`\n\n    const UpdateEmail = () => {\n        const [update_email, {data,loading,error}] = useMutation(UPDATE_EMAIL);\n\n        useEffect(() => {\n            update_email({\n                variables : {\n                    ID: sessionStorage.getItem(\"userId\"),\n                    Email: emailInput\n                }\n            });\n        }, []);\n\n        if (loading) {\n            return <p>Updating your email...</p>\n        }\n\n        if (data) {\n            let userProfile = JSON.parse(sessionStorage.getItem('userProfile'));\n            userProfile.Email = emailInput\n            sessionStorage.setItem('userProfile', JSON.stringify(userProfile));\n            window.location.reload(false);\n            return <p>Email updated!</p>\n        }\n        return null\n\n    }\n\n    const SendData = () => {\n        const {data, error, loading} = useQuery(VALIDATE_ACC, {\n            variables : {Email : emailInput}\n        });\n\n        if (loading)\n            return <p>Loading...</p>\n\n        if (!validateEmail(emailInput)) {\n            return <e> Please enter a valid email! </e>\n        } else if (data.User[0]){\n            return <e> That email is already registered! </e>\n        }\n\n        return <UpdateEmail/>\n\n    }\n\n    const handleKeypress = e => {\n        //it triggers by pressing the enter key\n        e.preventDefault();\n        console.log(e)\n        if (e.type === \"submit\") {\n            handleClick();\n        }\n    };\n\n    return (\n        <Container>\n            <Nav />\n            <Content theme={props.theme}>\n                <SignUpForm>\n                    <Title>Edit Email</Title>\n                    <Form onSubmit={handleKeypress}>\n                        <Row theme={props.theme.theme}>\n                            {/* <label>Email:</label> */}\n                            <input ref={email} type=\"email\" name=\"email\" placeholder=\"Enter New Email:\"/><br></br>\n                        </Row>\n                        <Row>\n                            <SubmitButton onClick={handleClick}>Change Email</SubmitButton>\n                            {emailInput !== null ? <SendData/> : clicked && <CheckBlank/>}\n                        </Row>\n\n                    </Form>\n                    <p>or</p>\n                    <GoogleButton onClick={handleGoogleClick}>\n                        <img src={Google} alt=\"Google\"/>\n                        <p>Use a New Google Account</p>\n                    </GoogleButton>\n                    {googleEmail !== null && googleClicked && (<CheckGoogleUser/>)}\n                </SignUpForm>\n            </Content>\n            <Footer />\n            console.log(email.current.value)\n        </Container>\n        \n    )\n}\n\nconst mapStateToProps = (state) => {\n    return state;\n}\n\nexport default connect(mapStateToProps)(EditEmail);\n\nconst Container = styled.div`\n`;\n\nconst Content = styled.div`\n    display: flex;\n    padding: 0 10%;\n    height: 100vh;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst SignUpForm = styled.div`\n    margin: 0 auto;\n    border: 2px solid ${({ theme }) => theme.toggleBorder};\n    border-radius: 4px;\n    padding: 25px 100px 50px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n    p {\n        margin: 0;\n    }\n`;\n\nconst Title = styled.p`\n    font-size: 36px;\n    margin: 0 0 50px 0;\n    font-weight: 700;\n`;\n\nconst Form = styled.form`\n    width: 100%;\n    margin-top: 20px;\n`;\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    input {\n        border: none;\n        outline: none;\n        padding: 5px;\n        font-size: 18px;\n        border-bottom: solid 1px ${({ theme }) => theme.text};\n        background-color: ${({ theme }) => theme.body};\n        color: ${({ theme }) => theme.text};\n\n        &::placeholder {\n            color: ${({ theme }) => theme.text};\n            opacity: .6;\n        }\n    } \n\n    p {\n        text-align: center;\n        color: green;\n    }\n    e {\n        text-align: center;\n        color: red;\n    }\n`;\n\nconst GoogleButton = styled.div`\n    width: max-content;\n    border: 2px solid #4285f4;\n    padding: 5px 30px;\n    border-radius: 45px;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    transition: 300ms;\n    background-color: #4285f4;\n    margin: 20px 0;\n\n    p {\n        margin-left: 20px;\n        font-size: 16px;\n        color: white;\n        font-weight: 700;\n    }\n    \n    img {\n        width: 25spx;\n        height: 25px;\n        border-radius: 50%;\n        background-color: white;\n    }\n\n    :hover {\n        opacity: .8;\n        transition: 300ms;\n    }\n`;\n\nconst SubmitButton = styled(GoogleButton)`\n    width: 100%;\n    background-color: #308446;\n    border: 2px solid #308446;\n    display: flex;\n    justify-content: center;\n    font-weight: 700;\n    color: white;\n`;\n\nconst Login = styled.p`\n    text-decoration: underline;\n    cursor: pointer;\n`;"]},"metadata":{},"sourceType":"module"}