{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/emily/Documents/spring22/capstone/website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"/home/emily/Documents/spring22/capstone/website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/emily/Documents/spring22/capstone/website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/emily/Documents/spring22/capstone/website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _templateObject,\n    _jsxFileName = \"/home/emily/Documents/spring22/capstone/website/src/Pages/Signup.js\",\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _templateObject6,\n    _templateObject7,\n    _templateObject8,\n    _templateObject9,\n    _templateObject10;\n\nimport React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport Nav from \"../Components/Nav\";\nimport Footer from \"../Components/Footer\";\nimport { useNavigate } from \"react-router\";\nimport { signInWithGoogle } from \"../Firebase/firebase\";\nimport Google from '../Images/Icons/Google.png';\nimport { store } from '../store/TripUsStore';\nimport { gql, useQuery } from \"@apollo/client\";\n\nfunction Signup(props) {\n  var _this = this;\n\n  var history = useNavigate();\n\n  function handleRoute(route) {\n    history(route);\n  }\n\n  var handleKeyDown = function handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      handleClick();\n    }\n  };\n\n  var password = useRef(null);\n  var passwordVerified = useRef(null);\n  var email = useRef(null);\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      emailInput = _React$useState2[0],\n      setEmailInput = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      passwordInput = _React$useState4[0],\n      setPasswordInput = _React$useState4[1];\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      passwordVerifyInput = _React$useState6[0],\n      setPasswordVerifyInput = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      clicked = _React$useState8[0],\n      setClicked = _React$useState8[1];\n\n  var _React$useState9 = React.useState(null),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      googleEmail = _React$useState10[0],\n      setGoogleEmail = _React$useState10[1];\n\n  var handleGoogleClick = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return signInWithGoogle();\n\n            case 2:\n              googleEmail = _context.sent;\n              console.log(googleEmail);\n\n              if (googleEmail === null) {\n                setGoogleEmail(null);\n              } else {\n                setGoogleEmail(googleEmail);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleGoogleClick(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleClick = function handleClick(e) {\n    setClicked(true);\n\n    if (email.current.value === \"\") {\n      setEmailInput(null);\n    } else {\n      setEmailInput(email.current.value.trim().toLowerCase());\n    }\n\n    if (password.current.value === \"\") {\n      setPasswordInput(null);\n    } else {\n      setPasswordInput(password.current.value);\n    }\n\n    if (passwordVerified.current.value === \"\") {\n      setPasswordVerifyInput(null);\n    } else {\n      setPasswordVerifyInput(passwordVerified.current.value);\n    }\n  };\n\n  var VALIDATE_ACC = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"query validateAcc ($Email: String!){\\n        User(where: {Email: {_eq: $Email}}) {\\n            User_ID\\n            First_Name\\n            Last_Name\\n        }\\n    }\"])));\n\n  function validateEmail(email) {\n    var regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regexp.test(email);\n  }\n\n  function validatePassword(password) {\n    var decimal = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/;\n    return decimal.test(password);\n  }\n\n  var CheckMismatch = function CheckMismatch() {\n    var _useQuery = useQuery(VALIDATE_ACC, {\n      variables: {\n        Email: emailInput,\n        Password: passwordInput\n      }\n    }),\n        data = _useQuery.data,\n        error = _useQuery.error,\n        loading = _useQuery.loading;\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 20\n        }\n      }, \"Signing up...\");\n    }\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"e\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 20\n        }\n      }, error);\n    }\n\n    if (!validatePassword(passwordInput)) {\n      return /*#__PURE__*/React.createElement(\"e\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 20\n        }\n      }, \"Password must be between 8 to 15 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character\");\n    }\n\n    if (!validateEmail(emailInput)) {\n      return /*#__PURE__*/React.createElement(\"e\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 20\n        }\n      }, \" Please enter a valid email \");\n    } else if (passwordInput === passwordVerifyInput && !data.User[0]) {\n      store.dispatch({\n        type: 'USER_PROFILE',\n        payload: {\n          Email: emailInput,\n          Password: passwordInput\n        }\n      });\n      handleRoute('/createprofile');\n    } else if (data.User[0]) {\n      return /*#__PURE__*/React.createElement(\"e\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 20\n        }\n      }, \" That email is already registered! \");\n    } else {\n      return /*#__PURE__*/React.createElement(\"e\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 20\n        }\n      }, \" Passwords don't match! \");\n    }\n\n    return null;\n  };\n\n  var CheckBlank = function CheckBlank() {\n    return /*#__PURE__*/React.createElement(\"e\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 16\n      }\n    }, \"Fields cannot be blank!\");\n  };\n\n  var CheckGoogleUser = function CheckGoogleUser() {\n    var _useQuery2 = useQuery(VALIDATE_ACC, {\n      variables: {\n        Email: googleEmail\n      }\n    }),\n        data = _useQuery2.data,\n        error = _useQuery2.error,\n        loading = _useQuery2.loading;\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 20\n        }\n      }, \"Signing up...\");\n    }\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"e\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 20\n        }\n      }, error);\n    }\n\n    if (data.User[0]) {\n      console.log(data);\n      store.dispatch({\n        type: 'UserId',\n        payload: data.User[0].User_ID\n      });\n      store.dispatch({\n        type: 'IS_AUTHENTICATED',\n        payload: true\n      });\n      sessionStorage.setItem('isAuthenticated', true);\n      handleRoute('/myGroups');\n    } else {\n      store.dispatch({\n        type: 'USER_PROFILE',\n        payload: {\n          Email: googleEmail,\n          Password: null\n        }\n      });\n      handleRoute('/createprofile');\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    theme: props.theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SignUpForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    theme: props.theme.theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: email,\n    onKeyDown: handleKeyDown,\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 122\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    theme: props.theme.theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: password,\n    onKeyDown: handleKeyDown,\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 135\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    theme: props.theme.theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: passwordVerified,\n    onKeyDown: handleKeyDown,\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Verify Password:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 150\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(SubmitButton, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }\n  }, \"Create Account\"), emailInput !== null && passwordInput !== null && passwordVerifyInput !== null ? /*#__PURE__*/React.createElement(CheckMismatch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 35\n    }\n  }) : clicked && /*#__PURE__*/React.createElement(CheckBlank, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 65\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, \"or\"), /*#__PURE__*/React.createElement(GoogleButton, {\n    onClick: handleGoogleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Google,\n    alt: \"Google\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, \"Sign Up with Google \")), googleEmail !== null && /*#__PURE__*/React.createElement(CheckGoogleUser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 47\n    }\n  }), /*#__PURE__*/React.createElement(Login, {\n    onClick: function onClick() {\n      return handleRoute('/login');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, \"Already Have A TripUs Account?\"))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps)(Signup);\nvar Container = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n\"])));\nvar Content = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    display: flex;\\n    padding: 0 10%;\\n    height: 100vh;\\n    justify-content: center;\\n    align-items: center;\\n\"])));\nvar SignUpForm = styled.div(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n    margin: 0 auto;\\n    border: 2px solid \", \";\\n    border-radius: 4px;\\n    padding: 25px 100px 50px;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    \\n    p {\\n        margin: 0;\\n    }\\n\"])), function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.toggleBorder;\n});\nvar Title = styled.p(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n    font-size: 36px;\\n    margin: 0 0 50px 0;\\n    font-weight: 700;\\n\"])));\nvar Form = styled.form(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n    width: 100%;\\n    margin-top: 20px;\\n\"])));\nvar Row = styled.div(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n    input {\\n        border: none;\\n        outline: none;\\n        padding: 5px;\\n        font-size: 18px;\\n        border-bottom: solid 1px \", \";\\n        background-color: \", \";\\n        color: \", \";\\n        &::placeholder {\\n            color: \", \";\\n            opacity: .6;\\n        }\\n    } \\n    p {\\n        text-align: center;\\n        color: green;\\n    }\\n    e {\\n        text-align: center;\\n        color: red;\\n    }\\n\"])), function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.text;\n}, function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.body;\n}, function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.text;\n}, function (_ref6) {\n  var theme = _ref6.theme;\n  return theme.text;\n});\nvar GoogleButton = styled.div(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n    width: max-content;\\n    border: 2px solid #4285f4;\\n    padding: 5px 30px;\\n    border-radius: 45px;\\n    display: flex;\\n    align-items: center;\\n    cursor: pointer;\\n    transition: 300ms;\\n    background-color: #4285f4;\\n    margin: 20px 0;\\n    p {\\n        margin-left: 20px;\\n        font-size: 16px;\\n        color: white;\\n        font-weight: 700;\\n    }\\n    \\n    img {\\n        width: 25spx;\\n        height: 25px;\\n        border-radius: 50%;\\n        background-color: white;\\n    }\\n    :hover {\\n        opacity: .8;\\n        transition: 300ms;\\n    }\\n\"])));\nvar SubmitButton = styled(GoogleButton)(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\n    width: 100%;\\n    background-color: #308446;\\n    border: 2px solid #308446;\\n    display: flex;\\n    justify-content: center;\\n    font-weight: 700;\\n    color: white;\\n\"])));\nvar Login = styled.p(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\\n    text-decoration: underline;\\n    cursor: pointer;\\n\"])));","map":{"version":3,"sources":["/home/emily/Documents/spring22/capstone/website/src/Pages/Signup.js"],"names":["React","useRef","styled","connect","Nav","Footer","useNavigate","signInWithGoogle","Google","store","gql","useQuery","Signup","props","history","handleRoute","route","handleKeyDown","e","key","handleClick","password","passwordVerified","email","useState","emailInput","setEmailInput","passwordInput","setPasswordInput","passwordVerifyInput","setPasswordVerifyInput","clicked","setClicked","googleEmail","setGoogleEmail","handleGoogleClick","console","log","current","value","trim","toLowerCase","VALIDATE_ACC","validateEmail","regexp","test","validatePassword","decimal","CheckMismatch","variables","Email","Password","data","error","loading","User","dispatch","type","payload","CheckBlank","CheckGoogleUser","User_ID","sessionStorage","setItem","theme","mapStateToProps","state","Container","div","Content","SignUpForm","toggleBorder","Title","p","Form","form","Row","text","body","GoogleButton","SubmitButton","Login"],"mappings":"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","sourcesContent":["import React, {useRef} from \"react\";\nimport styled from \"styled-components\";\nimport {connect} from \"react-redux\";\nimport Nav from \"../Components/Nav\";\nimport Footer from \"../Components/Footer\";\nimport { useNavigate } from \"react-router\";\nimport { signInWithGoogle } from \"../Firebase/firebase\";\nimport Google from '../Images/Icons/Google.png';\nimport { store } from '../store/TripUsStore';\nimport {gql, useQuery} from \"@apollo/client\";\n\nfunction Signup(props) {\n    const history = useNavigate();\n    function handleRoute(route) {\n        history(route);\n    }\n\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n          handleClick();\n        }\n    }\n\n    let password = useRef(null);\n    let passwordVerified = useRef(null);\n    let email = useRef(null);\n\n    const [emailInput, setEmailInput] = React.useState(null);\n    const [passwordInput, setPasswordInput] = React.useState(null);\n    const [passwordVerifyInput, setPasswordVerifyInput] = React.useState(null);\n    const [clicked, setClicked] = React.useState(false)\n    let [googleEmail, setGoogleEmail] = React.useState(null)\n\n    const handleGoogleClick = async (e) => {\n        googleEmail = await signInWithGoogle()\n        console.log(googleEmail)\n        if (googleEmail === null) {\n            setGoogleEmail(null)\n        } else {\n            setGoogleEmail(googleEmail);\n        }\n\n    }\n\n\n    const handleClick = (e) => {\n        setClicked(true)\n\n        if (email.current.value === \"\") {\n            setEmailInput(null)\n        } else {\n            setEmailInput(email.current.value.trim().toLowerCase());\n        }\n\n        if (password.current.value === \"\") {\n            setPasswordInput(null);\n        } else {\n            setPasswordInput(password.current.value);\n        }\n\n        if (passwordVerified.current.value === \"\") {\n            setPasswordVerifyInput(null);\n        } else {\n            setPasswordVerifyInput(passwordVerified.current.value);\n        }\n\n    };\n\n    const VALIDATE_ACC = gql`query validateAcc ($Email: String!){\n        User(where: {Email: {_eq: $Email}}) {\n            User_ID\n            First_Name\n            Last_Name\n        }\n    }`\n\n\n    function validateEmail (email) {\n        const regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return regexp.test(email);\n    }\n\n    function validatePassword (password) {\n        const decimal=  /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/;\n        return decimal.test(password);\n    }\n\n    const CheckMismatch = () => {\n        const {data, error, loading} = useQuery(VALIDATE_ACC, {\n            variables : {Email : emailInput, Password : passwordInput}\n        });\n\n        if(loading) {\n            return <p>Signing up...</p>\n        }\n\n        if(error) {\n            return <e>{error}</e>;\n        }\n\n        if (!validatePassword (passwordInput)){\n            return <e>Password must be between 8 to 15 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character</e>\n        }\n\n        if (!validateEmail (emailInput)) {\n            return <e> Please enter a valid email </e>\n        } else if(passwordInput === passwordVerifyInput && !data.User[0]) {\n            store.dispatch({type: 'USER_PROFILE', payload: {Email: emailInput, Password: passwordInput} })\n            handleRoute('/createprofile');\n        } else if (data.User[0]) {\n            return <e> That email is already registered! </e>\n        } else {\n            return <e> Passwords don't match! </e>\n        }\n\n        return null;\n    }\n\n    const CheckBlank = () => {\n        return <e>Fields cannot be blank!</e>\n    }\n\n    const CheckGoogleUser = () => {\n        const {data, error, loading} = useQuery(VALIDATE_ACC, {\n            variables : {Email : googleEmail}\n        });\n\n        if(loading) {\n            return <p>Signing up...</p>\n        }\n\n        if(error) {\n            return <e>{error}</e>;\n        }\n\n        if(data.User[0]){\n            console.log(data);\n            store.dispatch({ type: 'UserId', payload: data.User[0].User_ID });\n            store.dispatch({type: 'IS_AUTHENTICATED', payload: true })\n            sessionStorage.setItem('isAuthenticated', true);\n            handleRoute('/myGroups');\n        } else {\n            store.dispatch({type: 'USER_PROFILE', payload: {Email: googleEmail, Password: null} })\n            handleRoute('/createprofile');\n        }\n\n        return null;\n    }\n\n    return (\n        <Container>\n            <Nav />\n            <Content theme={props.theme}>\n                <SignUpForm>\n                    <Title>Sign Up</Title>\n                    <Form>\n                        <Row theme={props.theme.theme}>\n                            {/* <label>Email:</label> */}\n                            <input ref={email} onKeyDown={handleKeyDown} type=\"email\" name=\"email\" placeholder=\"Email:\"/><br></br>\n                        </Row>\n                        <Row theme={props.theme.theme}>\n                            {/* <label>Password:</label> */}\n                            <input ref={password} onKeyDown={handleKeyDown} type=\"password\" name=\"password\" placeholder=\"Password:\" /><br></br>\n                        </Row>\n                        <Row theme={props.theme.theme}>\n                            {/* <label>Password:</label> */}\n                            <input ref={passwordVerified} onKeyDown={handleKeyDown} type=\"password\" name=\"password\" placeholder=\"Verify Password:\" /><br></br>\n                        </Row>\n                        <Row>\n                            <SubmitButton onClick={handleClick}>Create Account</SubmitButton>\n                            {emailInput !== null && passwordInput !== null && passwordVerifyInput !== null\n                                ? <CheckMismatch/> : clicked && <CheckBlank/>}\n                        </Row>\n\n                    </Form>\n                    <p>or</p>\n                    <GoogleButton onClick={handleGoogleClick}>\n                        <img src={Google} alt=\"Google\"/>\n                        <p>Sign Up with Google </p>\n                    </GoogleButton>\n                    {googleEmail !== null && (<CheckGoogleUser/>)}\n                    <Login onClick={() => handleRoute('/login')}>\n                        Already Have A TripUs Account?\n                    </Login>\n                </SignUpForm>\n            </Content>\n            <Footer />\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return state;\n}\n\nexport default connect(mapStateToProps)(Signup);\n\nconst Container = styled.div`\n`;\n\nconst Content = styled.div`\n    display: flex;\n    padding: 0 10%;\n    height: 100vh;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst SignUpForm = styled.div`\n    margin: 0 auto;\n    border: 2px solid ${({ theme }) => theme.toggleBorder};\n    border-radius: 4px;\n    padding: 25px 100px 50px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n    p {\n        margin: 0;\n    }\n`;\n\nconst Title = styled.p`\n    font-size: 36px;\n    margin: 0 0 50px 0;\n    font-weight: 700;\n`;\n\nconst Form = styled.form`\n    width: 100%;\n    margin-top: 20px;\n`;\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: column;\n    input {\n        border: none;\n        outline: none;\n        padding: 5px;\n        font-size: 18px;\n        border-bottom: solid 1px ${({ theme }) => theme.text};\n        background-color: ${({ theme }) => theme.body};\n        color: ${({ theme }) => theme.text};\n        &::placeholder {\n            color: ${({ theme }) => theme.text};\n            opacity: .6;\n        }\n    } \n    p {\n        text-align: center;\n        color: green;\n    }\n    e {\n        text-align: center;\n        color: red;\n    }\n`;\n\nconst GoogleButton = styled.div`\n    width: max-content;\n    border: 2px solid #4285f4;\n    padding: 5px 30px;\n    border-radius: 45px;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    transition: 300ms;\n    background-color: #4285f4;\n    margin: 20px 0;\n    p {\n        margin-left: 20px;\n        font-size: 16px;\n        color: white;\n        font-weight: 700;\n    }\n    \n    img {\n        width: 25spx;\n        height: 25px;\n        border-radius: 50%;\n        background-color: white;\n    }\n    :hover {\n        opacity: .8;\n        transition: 300ms;\n    }\n`;\n\nconst SubmitButton = styled(GoogleButton)`\n    width: 100%;\n    background-color: #308446;\n    border: 2px solid #308446;\n    display: flex;\n    justify-content: center;\n    font-weight: 700;\n    color: white;\n`;\n\nconst Login = styled.p`\n    text-decoration: underline;\n    cursor: pointer;\n`;"]},"metadata":{},"sourceType":"module"}