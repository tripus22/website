{"ast":null,"code":"import _classCallCheck from \"/home/emily/Documents/spring22/capstone/website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/emily/Documents/spring22/capstone/website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/emily/Documents/spring22/capstone/website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/emily/Documents/spring22/capstone/website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _wrapNativeSuper from \"/home/emily/Documents/spring22/capstone/website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport { inspect } from './inspect.mjs';\n/**\n * Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\n */\n\nexport function toError(thrownValue) {\n  return thrownValue instanceof Error ? thrownValue : new NonErrorThrown(thrownValue);\n}\n\nvar NonErrorThrown = /*#__PURE__*/function (_Error) {\n  _inherits(NonErrorThrown, _Error);\n\n  function NonErrorThrown(thrownValue) {\n    var _this;\n\n    _classCallCheck(this, NonErrorThrown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NonErrorThrown).call(this, 'Unexpected error value: ' + inspect(thrownValue)));\n    _this.name = 'NonErrorThrown';\n    _this.thrownValue = thrownValue;\n    return _this;\n  }\n\n  return NonErrorThrown;\n}(_wrapNativeSuper(Error));","map":null,"metadata":{},"sourceType":"module"}