{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/emily/Documents/spring22/capstone/website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/home/emily/Documents/spring22/capstone/website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/emily/Documents/spring22/capstone/website/src/Detail Subpages/AddHotel.js\",\n    _templateObject,\n    _templateObject2,\n    _templateObject3;\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Nav from '../Components/Nav';\nimport Footer from '../Components/Footer';\nimport Flight from \"../Components/Flight\";\nimport { Content } from '../Styles/global';\nimport { gql, useQuery } from \"@apollo/client\";\nimport { connect } from \"react-redux\";\nimport Loading from '../Components/Loading';\nimport PlusDark from '../Images/Icons/DarkMode/PlusLight.png';\nimport { store } from '../store/TripUsStore';\nimport request from \"request\";\nimport HotelCard from '../Components/HotelCard';\nimport HotelFilter from '../Components/HotelFilter';\nimport Group from \"../Components/Group\";\nimport * as util from 'util';\nimport { portalSuspended } from 'pg-protocol/dist/messages';\n\nfunction AddHotel(props) {\n  var _this = this;\n\n  console.log(props.auth.filtData);\n  var userId = null;\n\n  if (!props.auth.userId) {\n    userId = sessionStorage.getItem('userId');\n  } else {\n    sessionStorage.setItem('userId', props.auth.userId);\n    userId = props.auth.userId;\n  }\n\n  var request = require('request');\n\n  var options1 = {\n    method: 'GET',\n    url: 'https://priceline-com-provider.p.rapidapi.com/v1/hotels/locations',\n    qs: {\n      search_type: 'HOTEL',\n      name: props.auth.filtData[5]\n    },\n    headers: {\n      'X-RapidAPI-Host': 'priceline-com-provider.p.rapidapi.com',\n      'X-RapidAPI-Key': '2b62108746msh76814bb9977a1f3p186515jsn0c0667276365',\n      useQueryString: true\n    }\n  }; // let testCity = \"\";\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoc = _React$useState2[0],\n      setIsLoc = _React$useState2[1];\n\n  React.useEffect(function () {\n    request(options1, function (error, response, body1) {\n      if (error) throw new Error(error);\n      console.log(JSON.parse(body1));\n      var dataArr1 = [];\n      var data1 = JSON.parse(body1);\n      var keys1 = Object.keys(data1);\n      keys1.forEach(function (key, index) {\n        dataArr1.push(data1[key]);\n      });\n      console.log(dataArr1);\n      console.log(dataArr1[0].cityID);\n      store.dispatch({\n        type: 'LOCATION_DATA',\n        payload: dataArr1[0].id\n      }); // testCity = JSON.stringify(props.auth.locData);\n\n      setIsLoc(true);\n    });\n  }, []);\n  React.useEffect(function () {\n    if (isLoc) {\n      console.log(props.auth.locData);\n      var options = {\n        method: 'GET',\n        url: 'https://priceline-com-provider.p.rapidapi.com/v1/hotels/search',\n        qs: {\n          date_checkin: props.auth.filtData[0],\n          location_id: props.auth.locData,\n          date_checkout: props.auth.filtData[1],\n          sort_order: props.auth.filtData[3],\n          amenities_ids: 'FINTRNT,FBRKFST',\n          rooms_number: props.auth.filtData[2],\n          star_rating_ids: props.auth.filtData[4]\n        },\n        headers: {\n          'X-RapidAPI-Host': 'priceline-com-provider.p.rapidapi.com',\n          'X-RapidAPI-Key': '2b62108746msh76814bb9977a1f3p186515jsn0c0667276365',\n          useQueryString: true\n        }\n      };\n      request(options, function (error, response, body) {\n        console.log(error);\n\n        if (error) {\n          console.log(error);\n          throw new Error(error);\n        }\n\n        console.log(JSON.parse(body));\n        var dataArr = [];\n\n        if (!JSON.parse(body).hotels) {\n          store.dispatch({\n            type: 'HOTEL_DATA',\n            payload: \"none\"\n          });\n          return;\n        }\n\n        var data = JSON.parse(body).hotels;\n        var keys = Object.keys(data);\n        keys.forEach(function (key, index) {\n          console.log(\"\".concat(key, \": \").concat(data[key]));\n          dataArr.push(data[key]);\n        });\n        store.dispatch({\n          type: 'HOTEL_DATA',\n          payload: dataArr\n        });\n      });\n    }\n  }, [isLoc]);\n  var city = '47609'; // const testCity = JSON.stringify(props.auth.locData);\n\n  if (!props.auth.hotelData) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      message: \"Finding Available Hotels...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    });\n  }\n\n  var NoResult = function NoResult() {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 14\n      }\n    }, \"No hotels found\");\n  };\n\n  console.log(props.auth.hotelData);\n  var filtered = []; // filter out hotels that don't have a name \n\n  function hasName(value) {\n    return value.name != null;\n  }\n\n  if (props.auth.hotelData !== \"none\") {\n    filtered = props.auth.hotelData.filter(hasName);\n  } else {\n    filtered = props.auth.hotelData;\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, \"Hotels\")), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, props.auth.hotelData === \"none\" ? /*#__PURE__*/React.createElement(NoResult, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 46\n    }\n  }) : filtered.map(function (hotel) {\n    return /*#__PURE__*/React.createElement(HotelCard, {\n      hotel: hotel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 23\n      }\n    });\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Container = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n \\n\"])));\nvar Title = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  text-align: center;\\n  margin-top: 100px;\\n\"])));\nvar CreateGroup = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  display: flex;\\n  border: none;\\n  padding: 0px 5px;\\n  border-radius: 20px;\\n  background-color: #308446;\\n  transition: 600ms;\\n  cursor: pointer;\\n  align-items: center;\\n  p {\\n    color: white;\\n    font-size: 16px;\\n    margin-right: 5px;\\n  }\\n  img{\\n    height: 30px;\\n    width: 30px;\\n  }\\n  &:hover {\\n      transition: 600ms;\\n      transform: scale(1.2);\\n    }\\n\"])));\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps)(AddHotel);","map":{"version":3,"sources":["/home/emily/Documents/spring22/capstone/website/src/Detail Subpages/AddHotel.js"],"names":["React","useState","styled","Nav","Footer","Flight","Content","gql","useQuery","connect","Loading","PlusDark","store","request","HotelCard","HotelFilter","Group","util","portalSuspended","AddHotel","props","console","log","auth","filtData","userId","sessionStorage","getItem","setItem","require","options1","method","url","qs","search_type","name","headers","useQueryString","isLoc","setIsLoc","useEffect","error","response","body1","Error","JSON","parse","dataArr1","data1","keys1","Object","keys","forEach","key","index","push","cityID","dispatch","type","payload","id","locData","options","date_checkin","location_id","date_checkout","sort_order","amenities_ids","rooms_number","star_rating_ids","body","dataArr","hotels","data","city","hotelData","NoResult","filtered","hasName","value","filter","map","hotel","Container","div","Title","CreateGroup","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Nav from '../Components/Nav';\nimport Footer from '../Components/Footer';\nimport Flight from \"../Components/Flight\";\nimport { Content } from '../Styles/global';\nimport {gql, useQuery} from \"@apollo/client\";\nimport {connect} from \"react-redux\";\nimport Loading from '../Components/Loading';\nimport PlusDark from '../Images/Icons/DarkMode/PlusLight.png'\nimport { store } from '../store/TripUsStore';\nimport request from \"request\";\nimport HotelCard from '../Components/HotelCard'\nimport HotelFilter from '../Components/HotelFilter'\nimport Group from \"../Components/Group\";\nimport * as util from 'util';\nimport { portalSuspended } from 'pg-protocol/dist/messages';\n\nfunction AddHotel(props) {\n  console.log(props.auth.filtData)\n  \n   \n\n  let userId = null;\n  if (!props.auth.userId) {\n    userId = sessionStorage.getItem('userId');\n  } else {\n    sessionStorage.setItem('userId', props.auth.userId);\n    userId = props.auth.userId;\n  }\n\n \n\n\n    const request = require('request');\n\n    const options1 = {\n      method: 'GET',\n      url: 'https://priceline-com-provider.p.rapidapi.com/v1/hotels/locations',\n      qs: {search_type: 'HOTEL', name: props.auth.filtData[5]},\n      headers: {\n        'X-RapidAPI-Host': 'priceline-com-provider.p.rapidapi.com',\n        'X-RapidAPI-Key': '2b62108746msh76814bb9977a1f3p186515jsn0c0667276365',\n        useQueryString: true\n      }\n    };\n\n    // let testCity = \"\";\n    const [isLoc, setIsLoc] = React.useState(false);\n    React.useEffect(() => {\n      request(options1, function (error, response, body1) {\n        if (error) throw new Error(error);\n        console.log(JSON.parse(body1))\n        let dataArr1 = []\n        const data1 = JSON.parse(body1)\n        const keys1 = Object.keys(data1)\n        keys1.forEach((key, index) => {\n          dataArr1.push(data1[key])\n        })\n        console.log(dataArr1)\n        console.log(dataArr1[0].cityID)\n        store.dispatch({type: 'LOCATION_DATA', payload: dataArr1[0].id})\n        // testCity = JSON.stringify(props.auth.locData);\n        \n        setIsLoc(true);\n      });\n    }, []);\n \n\n    React.useEffect(() => {\n      if (isLoc) {\n        console.log(props.auth.locData);\n        const options = {\n          method: 'GET',\n          url: 'https://priceline-com-provider.p.rapidapi.com/v1/hotels/search',\n          qs: {\n            date_checkin: props.auth.filtData[0],\n            location_id: props.auth.locData,\n            date_checkout: props.auth.filtData[1],\n            sort_order: props.auth.filtData[3],\n            amenities_ids: 'FINTRNT,FBRKFST',\n            rooms_number: props.auth.filtData[2],\n            star_rating_ids: props.auth.filtData[4]\n            },\n            headers: {\n                'X-RapidAPI-Host': 'priceline-com-provider.p.rapidapi.com',\n                'X-RapidAPI-Key': '2b62108746msh76814bb9977a1f3p186515jsn0c0667276365',\n                useQueryString: true\n            }\n        };\n    \n        request(options, function (error, response, body) {\n          console.log(error);\n          if (error) {\n            console.log(error);\n            throw new Error(error);\n          }\n          console.log(JSON.parse(body))\n          let dataArr = []\n          if (!JSON.parse(body).hotels) {\n            store.dispatch({type: 'HOTEL_DATA', payload: \"none\"})\n            return\n        }\n          const data = JSON.parse(body).hotels\n          const keys = Object.keys(data)\n          keys.forEach((key, index) => {\n              console.log(`${key}: ${data[key]}`)\n              \n              dataArr.push(data[key])\n          })\n          store.dispatch({type: 'HOTEL_DATA', payload: dataArr})\n        });\n      }\n    }, [isLoc])\n\n    const city = '47609'\n    // const testCity = JSON.stringify(props.auth.locData);\n\n    if (!props.auth.hotelData) {\n\n        return (\n            <Loading message=\"Finding Available Hotels...\" />\n        )\n\n    }\n\n    const NoResult = () => {\n      return <p>No hotels found</p>\n\n  }\n\n\n    console.log(props.auth.hotelData)\n\n    let filtered = []\n    // filter out hotels that don't have a name \n    function hasName(value) {\n      return value.name != null\n    }\n\n    if (props.auth.hotelData !== \"none\") {\n    filtered = props.auth.hotelData.filter(hasName)\n    } \n  else {\n    filtered = props.auth.hotelData\n}\n\n  return (\n    <Container>\n      <Nav />\n      <Title>\n        <h1>Hotels</h1>\n      </Title>\n      \n      <Content>\n\n          {props.auth.hotelData === \"none\" ? <NoResult/> : filtered.map((hotel) => {\n              return (<HotelCard hotel={hotel}/>);\n          })}\n      </Content>\n      <Footer />\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n \n`;\n\nconst Title = styled.div`\n  text-align: center;\n  margin-top: 100px;\n`;\n\nconst CreateGroup = styled.div`\n  display: flex;\n  border: none;\n  padding: 0px 5px;\n  border-radius: 20px;\n  background-color: #308446;\n  transition: 600ms;\n  cursor: pointer;\n  align-items: center;\n  p {\n    color: white;\n    font-size: 16px;\n    margin-right: 5px;\n  }\n  img{\n    height: 30px;\n    width: 30px;\n  }\n  &:hover {\n      transition: 600ms;\n      transform: scale(1.2);\n    }\n`;\n\nconst mapStateToProps = (state) => {\n    return state;\n}\n\nexport default connect(mapStateToProps)(AddHotel);"]},"metadata":{},"sourceType":"module"}